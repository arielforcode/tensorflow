# -*- coding: utf-8 -*-
"""redes neuronales

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1unqkiWmYAEcXo_St50Ld6gFYUazA4Oog
"""

pip install --upgrade tensorflow

import tensorflow.compat.v1 as tf
tf.disable_v2_behavior()

mensaje1= tf.constant('hola')
mensaje2= tf.constant('mundo')

print(mensaje1)

type(mensaje1)

with tf.Session() as sesion:
  resultado= sesion.run(mensaje1+mensaje2)

resultado

a= tf.constant(10)
b= tf.constant(5)

a+b

with tf.Session() as sesion:
  resultado= sesion.run(a+b)

resultado

import numpy as np

aleatorio_a=np.random.uniform(0,50,(4,4))
aleatorio_a

aleatorio_b=np.random.uniform(0,5,(4,1))
aleatorio_b

a= tf.placeholder(tf.float32)
b= tf.placeholder(tf.float32)

suma  = a + b
multiplicacion = a * b

with tf.Session() as sesion:
  resultado_suma=sesion.run(suma,feed_dict={a:10, b:20})
  print(resultado_suma)

with tf.Session() as sesion:
  resultado_suma=sesion.run(suma,feed_dict={a:aleatorio_a, b:aleatorio_b})
  print(resultado_suma)

with tf.Session() as sesion:
  resultado_multiplicacion=sesion.run(multiplicacion,feed_dict={a:10, b:20})
  print(resultado_multiplicacion)

with tf.Session() as sesion:
  resultado_multiplicacion=sesion.run(multiplicacion,feed_dict={a:aleatorio_a, b:aleatorio_b})
  print(resultado_multiplicacion)

carcateristica=10
neuronas=4

x=tf.placeholder(tf.float32,(None, carcateristica))
w= tf.Variable(tf.random.normal([carcateristica,neuronas]))

b= tf.Variable(tf.ones([neuronas]))

multiplicacion=tf.matmul(x,w)
z=tf.add(multiplicacion,b)
activacion= tf.sigmoid(z)

inicializacion= tf.global_variables_initializer()
valores_x=np.random.random([1,carcateristica])
valores_x

with tf.Session() as sesion:
  sesion.run(inicializacion)
  resultado= sesion.run(activacion, feed_dict={x:valores_x})

print(resultado)